{"version":3,"sources":["_services/_checking/checkServices.js","_helps/authHeader.js","_components/FullPageLoader/loading.gif","_components/FullPageLoader/FullPageLoader.js","valid.png","logochandelier.jpg","notvalid.jpeg","Scan1.js","Scan2.js","App.js","reportWebVitals.js","index.js"],"names":["checkServices","check","number","Axios","get","then","response","FullPageLoader","this","props","loading","className","style","position","src","LoaderGif","margin","height","width","alt","Component","useStyles","makeStyles","theme","conatiner","marginTop","title","display","justifyContent","alignItems","background","color","padding","footer","fontSize","large","spacing","large2","btn","marginBottom","Scan1","useState","scan","setscan","result","setresult","setloading","classes","handleScan","decision","onClick","bind","Avatar","imageValid","imageNotValid","Container","Card","CardContent","Grid","container","justify","item","xl","lg","md","sm","xs","direction","delay","onError","error","console","log","onScan","valeur","split","ret","data","catch","alert","withRouter","useEffect","match","params","Button","variant","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c578227a.chunk.js","sourcesContent":["import Axios from \"axios\";\nimport { apiUrl } from \"../../_helps\";\nexport const checkServices = {\n  check,\n};\nfunction check(number) {\n  const requestOptions = {\n    headers: {\n      \"Access-Control-Allow-Origin\": \"*\",\n    },\n  };\n  return Axios.get(`${apiUrl()}/check/${number}`).then((response) => {\n    return response;\n  });\n}\n","export function apiUrl() {\r\n    // return \"http://localhost:8081\";\r\n    return \"https://concert-chandelier.herokuapp.com\";\r\n}","export default __webpack_public_path__ + \"static/media/loading.149a7823.gif\";","import React, { Component } from \"react\";\nimport LoaderGif from \"./loading.gif\";\n//import CongoEmblem from \"../../components/assets/img/congo_emblem.svg\";\n//import JavLogo from \"../../assets/img/JavLogo.png\";\nimport \"./Loader.css\";\nclass FullPageLoader extends Component {\n  // state = {};\n  render() {\n    const { loading } = this.props;\n    if (!loading) return null;\n    return (\n      <div className=\"loader-container\">\n        <div className=\"loader\">\n          <div style={{ position: 'relative', }}>\n            {/* <img src={JavLogo} style={{ position: 'absolute',margin: \"auto\", height: 110, width: 'auto', top:20, left:23 }} alt=\"emblem drc\" /> */}\n            <img src={LoaderGif} style={{ margin: \"auto\",height:140, width:'auto' }} alt=\"Loading...\" />\n            \n          </div>\n          <p className=\"text-right\">Chargement...</p>\n        </div>\n      </div>\n    );\n  }\n}\nexport default FullPageLoader;\n","export default __webpack_public_path__ + \"static/media/valid.c581fcf0.png\";","export default __webpack_public_path__ + \"static/media/logochandelier.4beca3d0.jpg\";","export default __webpack_public_path__ + \"static/media/notvalid.ab9f6098.jpeg\";","import React, { useState } from \"react\";\nimport {\n  Container,\n  Card,\n  CardContent,\n  makeStyles,\n  Grid,\n  Button,\n  Avatar,\n} from \"@material-ui/core\";\nimport QrReader from \"react-qr-reader\";\nimport { checkServices } from \"./_services\";\nimport FullPageLoader from \"./_components/FullPageLoader/FullPageLoader\";\nimport imageLogo from \"./logochandelier.jpg\";\nimport imageValid from \"./valid.png\";\nimport imageNotValid from \"./notvalid.jpeg\";\nfunction Scan1() {\n  const [scan, setscan] = useState(false);\n  const [result, setresult] = useState(null);\n  const [loading, setloading] = useState(false);\n  const classes = useStyles();\n\n  const handleErrorWebCam = (error) => {\n    console.log(\"Error \", error);\n  };\n  const handleScanWebCam = (result) => {\n    // console.log(\"Scan result 1 = \",result);\n    if (result) {\n      const valeur = result.split(\n        \"https://mkasigwa.github.io/chandelier/#/\"\n      )[1];\n      //console.log(\"Plit result 1 = \",valeur);\n      setloading(true);\n      setscan(false);\n      checkServices\n        .check(valeur)\n        .then((ret) => {\n          // console.log(\"Return result : \",ret);\n          setresult(ret.data);\n          setloading(false);\n        })\n        .catch((error) => {\n          setloading(false);\n          alert(\"Erreur\");\n        });\n    }\n  };\n  const handleScan = (decision) => {\n    setresult(null);\n    setscan(decision);\n  };\n  return (\n    <div className=\"w-full flex flex-col justify-center items-center\">\n      {scan === false && result === null && (\n        <button\n          className=\"bg-gradient-to-r from-gray-900 to-teal-900 w-64 h-64 p-2 mb-4 rounded-full text-teal-100 font-bold text-lg hover:text-orange-600\"\n          onClick={handleScan.bind(this, true)}\n        >\n          Scan now\n        </button>\n      )}\n\n      {result === true && (\n        <>\n          <div className=\"w-full mb-4 flex justify-between items-center\">\n            <div className=\"mx-4\">\n              <button\n                className=\"bg-gradient-to-r from-gray-900 to-teal-900 text-teal-100 px-8 py-4 rounded-lg text-lg font-bold\"\n                onClick={handleScan.bind(this, true)}\n              >\n                Scan now\n              </button>\n            </div>\n            <div className=\"mx-4\">\n              <button className=\"bg-gradient-to-r from-red-900 to-red-500 text-teal-100 px-8 py-4 rounded-lg text-lg font-bold\">\n                Set Enter\n              </button>\n            </div>\n          </div>\n          <Avatar alt=\"Logo\" src={imageValid} className={classes.large} />\n        </>\n      )}\n\n      {result === false && result !== null && (\n        <>\n          <div className=\"w-full mb-4 flex justify-center items-center\">\n            <button\n              className=\"bg-gradient-to-r from-gray-900 to-teal-900 text-teal-100 px-8 py-4 rounded-lg text-lg font-bold\"\n              onClick={handleScan.bind(this, true)}\n            >\n              Scan now\n            </button>\n          </div>\n          <Avatar alt=\"Logo\" src={imageNotValid} className={classes.large} />\n        </>\n      )}\n      {scan && (\n        <Container className={classes.conatiner}>\n          <Card>\n            <CardContent>\n              <Grid container spacing={2} justify=\"center\" alignItems=\"center\">\n                <Grid\n                  item\n                  xl={4}\n                  lg={4}\n                  md={6}\n                  sm={12}\n                  xs={12}\n                  direction=\"row\"\n                  justify=\"center\"\n                  alignItems=\"center\"\n                  className=\" flex flex-col justify-center items-center\"\n                >\n                  <h3 className=\"text-sm text-gray-900\">\n                    Qr Code Scan by Web Cam\n                  </h3>\n                  <QrReader\n                    delay={300}\n                    style={{ width: \"100%\" }}\n                    onError={handleErrorWebCam}\n                    onScan={handleScanWebCam}\n                  />\n\n                  <div>\n                    <button\n                      className=\"mt-4 bg-red-800 px-4 py-2 text-red-100\"\n                      onClick={handleScan.bind(this, false)}\n                    >\n                      Stop scanning\n                    </button>\n                  </div>\n                  {/* <Button className={classes.btn+\" text-red-500\"} variant=\"contained\" \n                            color=\"danger\" onClick={handleScan.bind(this,false)}>Stop scanning</Button> */}\n                </Grid>\n              </Grid>\n            </CardContent>\n          </Card>\n        </Container>\n      )}\n      {/*       \n     <Container className={classes.conatiner}>\n           <Card>\n               <h2 className={classes.title}>Groupe Musical Chandelier de Gloire</h2>\n                <Avatar alt=\"Logo\" src={imageLogo} className={classes.large2}/> \n             {scan ===false && (\n              <Grid className=\"bg-black flex flex-col justify-cent items-center\" container spacing={2} justify=\"center\"\n                      alignItems=\"center\">\n              <Button  variant=\"contained\" className={classes.btn +} \n                            color=\"primary\" onClick={handleScan.bind(this,true)} disableElevation>Scan Now</Button>\n                           </Grid>\n                           )}\n              <CardContent>\n               \n                  <Grid container spacing={2} justify=\"center\"\n                      alignItems=\"center\">\n                      {result===true && (\n                        <Avatar alt=\"Logo\" src={imageValid} className={classes.large}/>\n                      )}\n\n                      {result ===false && result!==null && (\n                          <Avatar alt=\"Logo\" src={imageNotValid} className={classes.large}/>\n                        )}\n                      {scan && (\n                          \n                      <Grid item xl={4} lg={4} md={6} sm={12} xs={12}\n                      direction=\"row\"\n                      justify=\"center\"\n                      alignItems=\"center\">\n                         <h3>Qr Code Scan by Web Cam</h3>\n                         <QrReader\n                         delay={300}\n                         style={{width: '100%'}}\n                         onError={handleErrorWebCam}\n                         onScan={handleScanWebCam}\n                         />\n                         \n                         <Button className={classes.btn} variant=\"contained\" \n                            color=\"danger\" onClick={handleScan.bind(this,false)}>Stop scanning</Button>\n                      </Grid>\n                      )}\n                     \n                     \n                  </Grid>\n              </CardContent>\n              \n            <h2 className={classes.footer}>Copyright @ Chandelier de gloire 2021</h2> \n          </Card>\n         <FullPageLoader loading={loading}/>\n   </Container> */}\n      <FullPageLoader loading={loading} />\n    </div>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  conatiner: {\n    marginTop: 10,\n  },\n  title: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    background: \"#245478\",\n    color: \"#fff\",\n    padding: 20,\n  },\n  footer: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    background: \"black\",\n    color: \"#fff\",\n    fontSize: \"14px\",\n    padding: 20,\n  },\n  large: {\n    width: theme.spacing(30),\n    height: theme.spacing(30),\n    margin: \"auto\",\n  },\n  large2: {\n    width: theme.spacing(20),\n    height: theme.spacing(20),\n    margin: \"auto\",\n  },\n  btn: {\n    marginTop: 10,\n    marginBottom: 20,\n  },\n}));\nexport default Scan1;\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport {\n  Container,\n  Card,\n  CardContent,\n  makeStyles,\n  Grid,\n  Button,\n  Avatar,\n} from \"@material-ui/core\";\nimport QrReader from \"react-qr-reader\";\nimport { checkServices } from \"./_services\";\nimport FullPageLoader from \"./_components/FullPageLoader/FullPageLoader\";\nimport imageLogo from \"./logochandelier.jpg\";\nimport imageValid from \"./valid.png\";\nimport imageNotValid from \"./notvalid.jpeg\";\nfunction Scan2(props) {\n  const [scan, setscan] = useState(false);\n  const [result, setresult] = useState(null);\n  const [loading, setloading] = useState(false);\n  const classes = useStyles();\n\n  const handleErrorWebCam = (error) => {\n    console.log(\"Error 2\", error);\n  };\n\n  const handleScanWebCam2 = (result) => {\n    //  console.log(\"Result 2\", result);\n    if (result) {\n      const valeur = result.split(\n        \"https://mkasigwa.github.io/chandelier/#/\"\n      )[1];\n      console.log(\"Plit result2 = \", valeur);\n      setloading(true);\n      setscan(false);\n      checkServices\n        .check(valeur)\n        .then((ret) => {\n          setresult(ret.data);\n          setloading(false);\n        })\n        .catch((error) => {\n          setloading(false);\n          alert(\"Erreur\");\n        });\n    }\n  };\n\n  const handleScanWebCam = () => {\n    if (props.match.params.number) {\n      setloading(true);\n      setscan(false);\n      checkServices\n        .check(props.match.params.number)\n        .then((ret) => {\n          setresult(ret.data);\n          setloading(false);\n        })\n        .catch((error) => {\n          setloading(false);\n          alert(\"Erreur\");\n        });\n    }\n  };\n  const handleScan = (decision) => {\n    setresult(null);\n    setscan(decision);\n  };\n\n  useEffect(() => {\n    handleScanWebCam();\n  }, []);\n\n  return (\n    <div className=\"w-full flex flex-col justify-center items-center\">\n      <Container className={classes.conatiner}>\n        {/* <div>\n            <h2>Scan {props.match.params.number}</h2>\n        </div> */}\n        <Card>\n          {/* <h2 className={classes.title}>Groupe Musical Chandelier de Gloire</h2> */}\n          {/* <Avatar alt=\"Logo\" src={imageLogo} className={classes.large2}/> */}\n          {scan === false && (\n            <Grid container spacing={2} justify=\"center\" alignItems=\"center\">\n              {/* <Button size=\"large\" variant=\"contained\" className={classes.btn} \n                            color=\"primary\" onClick={handleScan.bind(this,true)} disableElevation>Scan Now</Button> */}\n            </Grid>\n          )}\n          <CardContent>\n            {scan === false && result === null && (\n              <Grid container spacing={2} justify=\"center\" alignItems=\"center\">\n                <button\n                  className=\"bg-gradient-to-r from-gray-900 to-teal-900 mt-8 w-64 h-64 p-2 mb-4 rounded-full text-teal-100 font-bold text-lg hover:text-orange-600\"\n                  onClick={handleScan.bind(this, true)}\n                >\n                  Scan now\n                </button>\n              </Grid>\n            )}\n\n            <Grid container spacing={2} justify=\"center\" alignItems=\"center\">\n              {result === true && (\n                <>\n                  <div className=\"w-full mb-4 flex justify-between items-center\">\n                    <div className=\"mx-4\">\n                      <button\n                        className=\"bg-gradient-to-r from-gray-900 to-teal-900 mt-4 text-teal-100 px-8 py-4 rounded-lg text-lg font-bold\"\n                        onClick={handleScan.bind(this, true)}\n                      >\n                        Scan now\n                      </button>\n                    </div>\n                    <div className=\"mx-4\">\n                      <button className=\"bg-gradient-to-r from-red-900  to-red-500 mt-4 text-teal-100 px-8 py-4 rounded-lg text-lg font-bold\">\n                        Set Enter\n                      </button>\n                    </div>\n                  </div>\n                  <Avatar\n                    alt=\"Logo\"\n                    src={imageValid}\n                    className={classes.large}\n                  />\n                </>\n              )}\n\n              {result === false && result !== null && (\n                <div className=\"flex flex-col justify-center items-center\">\n                  <button\n                    className=\"bg-gradient-to-r from-gray-900 mt-8 to-teal-900 text-teal-100 px-8 py-4 rounded-lg text-lg font-bold\"\n                    onClick={handleScan.bind(this, true)}\n                  >\n                    Scan now\n                  </button>\n\n                  <Avatar\n                    alt=\"Logo\"\n                    src={imageNotValid}\n                    className={classes.large}\n                  />\n                </div>\n              )}\n              {scan && (\n                <Grid\n                  item\n                  xl={4}\n                  lg={4}\n                  md={6}\n                  sm={12}\n                  xs={12}\n                  direction=\"row\"\n                  justify=\"center\"\n                  alignItems=\"center\"\n                >\n                  <h3>Qr Code Scan by Web Cam</h3>\n                  <QrReader\n                    delay={300}\n                    style={{ width: \"100%\" }}\n                    onError={handleErrorWebCam}\n                    onScan={handleScanWebCam2}\n                  />\n                  {/* <h3>Scanned By WebCam Code: {scanResultWebCam}</h3> */}\n                  <Button\n                    className={classes.btn}\n                    variant=\"contained\"\n                    color=\"danger\"\n                    onClick={handleScan.bind(this, false)}\n                  >\n                    Stop scanning\n                  </Button>\n                </Grid>\n              )}\n              {/* <Grid item xl={4} lg={4} md={6} sm={12} xs={12}\n                      direction=\"row\"\n                      justify=\"center\"\n                      alignItems=\"center\"> \n                      <div style={{margin:'auto'}}>\n                                <Button variant=\"contained\" className={classes.btn} \n                            color=\"primary\" onClick={handleScan.bind(this,true)} disableElevation>Scan Now</Button>\n                    </div>\n                      </Grid> */}\n            </Grid>\n          </CardContent>\n\n          {/* <h2 className={classes.footer}>Copyright @ Chandelier de gloire 2021</h2> */}\n        </Card>\n        <FullPageLoader loading={loading} />\n      </Container>\n    </div>\n  );\n}\nconst useStyles = makeStyles((theme) => ({\n  conatiner: {\n    marginTop: 10,\n  },\n  title: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    background: \"#245478\",\n    color: \"#fff\",\n    padding: 20,\n  },\n  footer: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    background: \"black\",\n    color: \"#fff\",\n    fontSize: \"14px\",\n    padding: 20,\n  },\n  large: {\n    width: theme.spacing(30),\n    height: theme.spacing(30),\n    margin: \"auto\",\n  },\n  large2: {\n    width: theme.spacing(20),\n    height: theme.spacing(20),\n    margin: \"auto\",\n  },\n  btn: {\n    marginTop: 10,\n    marginBottom: 20,\n  },\n}));\n\nexport default withRouter(Scan2);\n","// import logo from './logo.svg';\n// import './App.css';\nimport { HashRouter as Router,Route } from \"react-router-dom\";\n import Scan1 from \"./Scan1\";\n import Scan2 from \"./Scan2\";\n// import Footer from \"./Footer\";\n// import Header from \"./Header\";\nfunction App() {\n  return (\n    <div className=\"App\">\n      {/* <Header/> */}\n      {/* <div style={{margin:'20',padding:'20',backgroundColor:'red',top: \"40\",height: '100vh',bottom: \"60vh\",position: \"center\",}}> */}\n      <Router>\n        <Route exact path=\"/\">\n          <Scan1/>\n        </Route>\n        <Route path=\"/:number\">\n            <Scan2/>\n        </Route>\n      </Router>\n      {/* </div>\n      <Footer/> */}\n    </div>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}